name: Build & publish autotest artifacts
on:
  release:
    types: [ published ]

jobs:
  publish:
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest, preset: linuxX64, task: publish }
          - { os: macos-latest, preset: macosX64, task: publishMacosX64ZipPublicationToMavenRepository }
          - { os: windows-latest, preset: mingwX64, task: publishMingwX64ZipPublicationToMavenRepository }
    name: Publish for ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v2
      - id: to_version
        uses: actions/github-script@0.9.0
        with:
          result-encoding: string
          script: |
            return '${{ github.event.release.tag_name }}'.replace(/^v/, '');
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: eskatos/gradle-command-action@v1
        with:
          arguments: -s generateNativeClasses ${{ matrix.config.task }}
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx4096m
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/distributions/${{ matrix.config.preset }}-${{ steps.to_version.outputs.result }}.zip
          asset_name: agent-${{ matrix.config.preset }}-${{ steps.to_version.outputs.result }}.zip
          asset_content_type: application/zip
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      # place this action LAST
      - uses: Drill4J/vee-table@0.0.0
        if: ${{ matrix.config.preset == 'linuxX64' }}
        with:
          # leave everything "as-is"
          github-access-token: ${{ secrets.VEE_TABLE_TOKEN }}
          action-type: 'add-version'
          ledger-repo-url: 'https://github.com/Drill4J/vee-ledger'
          ledger-repo-owner: 'Drill4J'
          ledger-repo-name: 'vee-ledger'
          version-component-id: ${{ github.event.repository.name }}
          # leave everything "as-is"

          # steps.build_artifact is your step, where new version tag is created
          version-tag: ${{ steps.get_version.outputs.VERSION }} # Pass new version tag
