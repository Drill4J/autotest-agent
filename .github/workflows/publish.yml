name: Build & publish autotest artifacts
on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_publish_for_nix:
    name: Publish for nix platforms (macOS, Linux)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - id: cache-gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Publish
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: --no-daemon -si publish
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx4096m
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      # place this action LAST
      - uses: Drill4J/vee-table@0.0.0
        with:
          # leave everything "as-is"
          github-access-token: ${{ secrets.VEE_TABLE_TOKEN }}
          action-type: 'add-version'
          ledger-repo-url: 'https://github.com/Drill4J/vee-ledger'
          ledger-repo-owner: 'Drill4J'
          ledger-repo-name: 'vee-ledger'
          version-component-id: ${{ github.event.repository.name }}
          # leave everything "as-is"

          # steps.build_artifact is your step, where new version tag is created
          version-tag: ${{ steps.get_version.outputs.VERSION }} # Pass new version tag

  build_and_publish_for_win:
    name: Publish for Windows platform (Windows platform)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - id: cache-gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Publish
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: -si generateNativeClasses publishMingwX64ZipPublicationToMavenRepository
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
